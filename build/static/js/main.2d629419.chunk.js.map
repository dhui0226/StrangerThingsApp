{"version":3,"sources":["api/index.js","components/LoginRegister.js","components/AddPost.js","components/Edit.js","components/Posts.js","components/Profile.js","components/Nav.js","index.js"],"names":["BASE_URL","givenToken","token","localStorage","setItem","grabToken","getItem","register","username","password","a","fetch","method","headers","body","JSON","stringify","user","response","json","error","data","console","log","Error","message","alert","login","Register","props","useState","setUsername","setPassword","errorMessage","setErrorMessage","setIsLoggedIn","className","onSubmit","event","preventDefault","type","placeholder","value","onChange","target","onClick","AddPost","publicPosts","setPublicPosts","setAddPostClicked","addPostClicked","title","setTitle","description","setDescription","price","setPrice","location","setLocation","willDeliver","setWillDeliver","handleSubmit","post","cancelCreate","id","Edits","postId","setPostsId","showResults","setShowResults","newPosts","map","_id","Posts","loggedIn","isEditClicked","setIsEditClicked","searchInput","setSearchInput","searchOutput","setSearchOutput","createPost","makeEdit","handleDelete","postIdToDelete","newPost","filter","useEffect","val","toLowerCase","includes","Edit","index","author","Profile","currentUser","userMessages","setUserMessages","then","result","posts","idx","Nav","to","Main","removeItem","assign","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2d629419.chunk.js","sourcesContent":["const BASE_URL = 'https://strangers-things.herokuapp.com/api/2104-UIC-RM-WEB-FT';\n\nexport const givenToken = (token) =>{\n    localStorage.setItem('given-token', token);\n}\n\nexport const grabToken = () => {\n    return localStorage.getItem('given-token')\n}\n\nexport const clearToken = () => {\n    localStorage.removeItem('given-token');\n}\n\n\n\nexport const register = async(username, password, checkUser = false) => {\n    const response = await fetch(`${BASE_URL}/users/register`, \n        {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                user: {\n                    username: username,\n                    password: password,\n                }\n            })\n        })\n\n        const {error, data} = await response.json();\n        console.log('register', data)\n\n        if (error){\n           throw Error(error.message)\n        } else if (data && data.token){\n               givenToken(data.token);\n               alert('Registration Success! Press Log-in to Log In')\n        }\n        \n        return data\n}\n\nexport const login = async(username, password, checkUser = false) => {\n\n    const response = await fetch(`${BASE_URL}/users/login`, \n        {\n\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            user: {\n                username: username,\n                password: password,\n            }\n        })\n        })\n\n        const {error, data} = await response.json();\n        console.log('logging in', data)\n\n        if (error){\n           throw Error(error.message)\n        } else if (data && data.token){\n               givenToken(data.token);\n        }\n    \n        return data\n}\n\nexport const publicPosts = async () => {\n    const response = await fetch(`${BASE_URL}/posts`)   \n    const data = await response.json();   \n\n}\n\n","import React, { useState } from 'react'\nimport {register, login} from '../api'\n\nconst Register = (props) =>{\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('') \n\n    const [errorMessage, setErrorMessage] = useState(null);\n    const {setIsLoggedIn} = props;\n\n    return (\n        <>              \n        <form className ='authenticate' onSubmit = {(event) => event.preventDefault()}> \n            <h1 className = 'maintitle'>Stranger's Things</h1>\n            \n            <h1 className = 'login'> Log In</h1>\n\n            {errorMessage ? <h2 className = 'error'>{errorMessage}</h2> : null}\n        \n        <div className = 'credentialtools'>\n            <input type ='text'\n            className = 'credential'\n            placeholder ='username' \n            value ={username} \n            onChange={(event) => setUsername(event.target.value)}\n            />            \n\n            <input type = 'password' \n            value = {password} \n            placeholder ='password'\n            className = 'credential' \n            onChange = {(event) => setPassword(event.target.value)} \n            />\n\n            <button className = 'loginbutton' onClick = {async (event) => {\n                try{\n                    const result = await login(username, password);\n                    setIsLoggedIn(true);\n                }catch (error){\n                    setErrorMessage(error.message);\n                }\n            }}> Log-In </button>\n\n            <button className = 'registerbutton' onClick ={async (event) => {\n                try{\n                    const result = await register(username, password);\n                }catch (error){\n                    setErrorMessage(error.message);\n                }\n            }}> Register </button>\n        </div>\n        </form>\n        </>\n    )\n}\n\nexport default Register;","import React, { useState } from 'react'\nimport {grabToken} from '../api'\n\nconst AddPost = ({publicPosts, setPublicPosts, addPostClicked, setAddPostClicked}) => {\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n    const [price, setPrice] = useState('')\n    const [location, setLocation] = useState('')\n    const [willDeliver, setWillDeliver] = useState(false)\n\n    const handleSubmit = async(event) => {\n        event.preventDefault();\n        const response = await fetch('https://strangers-things.herokuapp.com/api/2104-UIC-RM-WEB-FT/posts', {\n            method: 'POST',\n            headers: {\n                'Content-type': 'Application/json',\n                'Authorization': `Bearer ${grabToken()}`\n            },\n            body: JSON.stringify({\n                post: {\n                    title,\n                    description,\n                    price,\n                    location,\n                    willDeliver\n                }\n            })\n        }) \n\n        const data = await response.json();\n\n        setPublicPosts([data.data.post, ...publicPosts])\n\n\n\n    } \n\n    const cancelCreate = async() => {\n        setAddPostClicked(false)\n    }\n\n    return (\n\n        <>\n        <div className = 'addform'>\n            <form className = 'postadd' onSubmit={handleSubmit}>\n                <h1 className = 'f1'>Add New Post</h1>\n                <label className = 'f2'>Title</label>\n                <input className = 'f2field' type ='text' id='title' \n                \n                onChange={(event) => {setTitle(event.target.value)}}></input>\n\n                <label className = 'f2'>Description</label>\n                <input className = 'f2field' type='text' id='description' \n                \n                onChange={(event) => {setDescription(event.target.value)}}></input>\n\n                <label className = 'f2'>Price</label>\n                <input className = 'f2field' type='text' id='price' \n                \n                onChange={(event) => {setPrice(event.target.value)}}></input>\n\n                <label className = 'f2'>Location</label>\n                <input className = 'f2field' type='text' id='location' \n                \n                onChange={(event) => {setLocation(event.target.value)}}></input>\n\n                <div className = 'box'>\n                <label className = 'f2'>Willing to Deliver?</label>\n                <input className = 'f2field' className = 'check' type='checkbox'\n                onChange={() => {setWillDeliver(true)}}></input>\n                </div>\n\n                <button className ='create'>Create</button>\n            </form>\n            <button className ='cancelCreate'\n            onClick={cancelCreate}>Close</button>\n        </div>\n        </>\n\n    )\n}\n\nexport default AddPost","import React, { useEffect, useState } from 'react'\n\nimport {grabToken} from '../api'\n\n\nconst Edits = (props) => {\n    const {publicPosts, setPublicPosts, postId, setPostsId, showResults, setShowResults} = props;\n    \n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n    const [price, setPrice] = useState('')\n    const [location, setLocation] = useState('')\n\n\n    const handleSubmit = async(event) => {\n        event.preventDefault();\n\n     \n\n\n        const response = await fetch(`https://strangers-things.herokuapp.com/api/2104-UIC-RM-WEB-FT/posts/${postId}`,\n        {\n            method: 'PATCH',\n            headers: {\n                'Content-type': 'Application/json',\n                'Authorization': `Bearer ${grabToken()}` \n            },\n            body: JSON.stringify({\n                post: {\n                    title,\n                    description,\n                    price,\n                    location\n                }\n            })\n        })\n\n        const data = await response.json();\n        // console.log('edit data:', data.data.post)\n        if(data.data.post && data.data.post.title){\n            const newPosts = publicPosts.map(post => {\n                if(post._id === postId){\n                    return data.data.post\n                }else{\n                    return post;\n                }\n            })\n            setPublicPosts(newPosts)\n            setTitle('')\n            setDescription('')\n            setPrice('')\n            setLocation('')\n            setPostsId(null)\n        }\n    }\n\n    return (\n        <>\n           { showResults ?\n           <>\n           <div className = 'editform'>  \n            <form className = 'postedit' onSubmit={handleSubmit}>\n                <h1 className = 'd1'>Edit Post</h1>\n                <label className = 'd2'>Title</label>\n                <input className ='d2field' type ='text'\n                \n                onChange={(event) => {setTitle(event.target.value)}}></input>\n                <label className = 'd2'>Description</label>\n                <input className ='d2field' type='text' \n                \n                onChange={(event) => {setDescription(event.target.value)}}></input>\n                <label className = 'd2'>Price</label>\n                <input className ='d2field' type='text' \n                \n                onChange={(event) => {setPrice(event.target.value)}}></input>\n                <label className = 'd2'>Location</label>\n                <input className ='d2field' type='text'  \n                \n                onChange={(event) => {setLocation(event.target.value)}}></input>\n                <button className ='submit'>\n                    Submit\n                </button>\n            </form>\n\n            <button className = 'close' onClick = {() => setShowResults(false)} >Close </button>    \n            </div>\n            </>\n        :\n\n        null\n            }\n        </>\n    )\n}\n\n\n\nexport default Edits","import React, { useEffect, useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport AddPost from './AddPost'\nimport Edits from './Edit'\nimport {grabToken} from '../api'\n\n\nconst Posts = (props) =>{\n    const {publicPosts, setPublicPosts, loggedIn, setIsLoggedIn, isEditClicked, setIsEditClicked} = props;\n    const [postId, setPostsId] = useState(null)\n    const [searchInput, setSearchInput] = useState('')\n    const [searchOutput, setSearchOutput] = useState ([])\n    const [addPostClicked, setAddPostClicked] = useState(false)\n    const [showResults, setShowResults] = useState(false)\n\n    console.log('public posts:', publicPosts)\n\n    const createPost = async () => {\n        setAddPostClicked(true)\n    }\n\n    const makeEdit = async () => {\n        setShowResults(true)\n    }\n\n    const handleDelete = async (postIdToDelete) => {\n        console.log('postIdToDelete: ', postIdToDelete)\n        const response = await fetch(`https://strangers-things.herokuapp.com/api/2104-UIC-RM-WEB-FT/posts/${postIdToDelete}`,\n        \n        {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${grabToken()}` \n            }\n        })\n\n        const data = response.json()\n        console.log('data', data)\n\n        if(data){\n            const newPost = publicPosts.filter(post => post._id !== postIdToDelete)\n            setPublicPosts(newPost)\n        }\n    }\n\n    useEffect(() => {\n        setSearchOutput([])\n        publicPosts.filter(val =>{\n            if(val.title.toLowerCase().includes(searchInput.toLowerCase())){\n                \n                setSearchOutput(searchOutput => [...searchOutput, val])\n            }\n        }\n            )\n    }, [searchInput])\n\n\n    return (\n        <> \n        <div className = 'thesearcher'>\n            <h2 className= 'searchposts'>Search Posts</h2>\n            <div className ='search-bar'>\n                <input className = 'searchfield' onChange = { event => setSearchInput(event.target.value) } type ='text' placeholder ='Search Title' />\n            </div>\n        \n            <button className='addPost'\n            onClick={createPost}>Add Post\n            </button>\n        </div>\n            { addPostClicked ? \n            <AddPost publicPosts={publicPosts} setPublicPosts={setPublicPosts} addPostClicked={addPostClicked} setAddPostClicked={setAddPostClicked}/> \n            : null }\n                       \n            {\n            searchInput ?\n           \n            <>\n                {showResults ? <Edits publicPosts={publicPosts} setPublicPosts={setPublicPosts} postId = {postId} setPostsId = {setPostsId} \n                 showResults = {showResults} setShowResults = {setShowResults}/> : null}\n            <div className ='userposts'> {searchOutput.map((post,index) => (\n                    <div key = {index} className = 'post'>\n                        <h1 className = 'q1t'>{post.title}</h1> \n                    <p className = 'q1'>{post.description}</p>\n                    <h3 className = 'q1'>Price: {post.price}</h3>\n                    <h3 className = 'q1' id = 'seller'>Seller: {post.author.username}</h3>\n                    <h3 className = 'q1'>Location: {post.location}</h3>            \n\n                    <button type='button' className = 'edit' onClick = {() => {setPostsId(post._id); makeEdit()}}>Edit</button>\n                    \n                    <button type='button' className = 'delete' onClick = {() => handleDelete(post._id)}>Delete</button>\n                \n                    <Edits publicPosts={publicPosts} setPublicPosts={setPublicPosts} postId = {postId} setPostsId = {setPostsId} \n                   />\n\n                    </div>))}\n\n                </div>\n                </>\n                \n                :\n\n                <>\n                {showResults ? <Edits publicPosts={publicPosts} setPublicPosts={setPublicPosts} postId = {postId} setPostsId = {setPostsId} \n                 showResults = {showResults} setShowResults = {setShowResults}/> : null}\n            <div className = 'userposts'> {publicPosts.map((post, index) => (\n\n                <div key={index} className='post' >  \n                    <h1 className = 'q1t'>{post.title}</h1> \n                    <p className = 'q1'>{post.description}</p>\n                    <h3 className = 'q1'>Price: {post.price}</h3>\n\n                    <h3 className = 'q1' id = 'seller'>Seller: {post.author.username}</h3> \n                    <h3 className = 'q1'>Location: {post.location}</h3>            \n\n                    <button type='button' className = 'edit' onClick = {() => {setPostsId(post._id); makeEdit() }}> \n                        Edit \n                    </button>\n                    \n                    <button type='button' className = 'delete' onClick = {() => handleDelete(post._id)}>Delete</button>\n                    \n                    \n                \n                 </div>))}           \n          \n            </div>\n            </>\n            }\n\n        </>\n    \n    )\n}\n\nexport default Posts;","import React, { useEffect, useState } from 'react'\nimport ReactDOM from 'react-dom'\n\n\n\nconst Profile = (props) => {\n    const {currentUser} = props;\n    const [userMessages, setUserMessages] = useState([])\n\n    useEffect(() => {\n        currentUser().then(result => setUserMessages(result.data.posts))\n    }, [])\n\n    console.log('yabba', userMessages)\n\n    return (\n        <>\n            <h1 className = 'myposts'>My Posts</h1>\n            <div className = 'userposts'> \n                {userMessages.map((message, idx) => {\n                    return <div className='post' key={idx}>\n                        <h1 className = 'q1t'>{message.title}</h1>\n                        <p className = 'q1'>{message.description}</p>\n                        <h3 className = 'q1'>Price: {message.price}</h3>\n                        <h3 className = 'q1'>Location: {message.location}</h3>       \n                    </div>\n                })}\n            </div>\n        </>\n    )\n}\n\nexport default Profile;","import React from 'react'\nimport { HashRouter as Router, Route, Link, Switch } from 'react-router-dom'\n\n\nconst Nav = (props) => {\n    const {currentUser} = props\n\n    return (\n        <>\n            <nav className = 'navigation'>                 \n\n                <Link className = 'tohome' to='/'> Home </Link>\n\n                <Link className = 'toprofile' to = '/profile'>Profile</Link> \n\n            </nav>\n        </>\n    )\n}\n\nexport default Nav","import React, {useEffect, useState} from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter as Router, Route, Link, Switch, Redirect } from 'react-router-dom'\n\nimport {grabToken, clearToken, publicPosts} from './api'\nimport {Register, Posts, Profile, AddPost, Nav, Edit} from './components'\n\nconst Main = () =>{\n    const [loggedIn, setIsLoggedIn] = useState(grabToken());\n    const [publicPosts, setPublicPosts] = useState ([])\n\n\n    const currentUser = async () => {\n        const response = await fetch('https://strangers-things.herokuapp.com/api/2104-UIC-RM-WEB-FT/users/me',\n        { headers: {\n            'Content-type': 'application/json',\n            'Authorization': `Bearer ${grabToken()}` \n        } })\n    \n        const data = await response.json();\n        return data\n\n    }\n\n    useEffect(() => {\n        fetch('https://strangers-things.herokuapp.com/api/2104-UIC-RM-WEB-FT/posts')\n        .then(response => response.json())\n        .then(result => setPublicPosts(result.data.posts))  \n    }, []);\n\n    console.log('public', publicPosts)\n\n    return (        \n        <>\n\n        <div className = 'home'>\n\n            {loggedIn ? (\n\n                <>\n\n                <div className=\"header\">\n                         \n                    <div className = 'topper'>\n                        <Nav currentUser = {currentUser}/>\n                        <button className='logoutbutton' onClick={() => {\n                            clearToken() \n                            setIsLoggedIn('') \n \n                            location.assign('/')\n\n                        }}>Log Out</button> \n                    </div>\n                     \n                </div>\n                <h1 className = 'stranger'>Stranger's Things</h1>       \n               \n               <Route exact path = '/' render = {() => <Posts publicPosts={publicPosts} setPublicPosts={setPublicPosts} loggedIn ={loggedIn} setIsLoggedIn ={setIsLoggedIn} />} />\n               <Route path = '/profile' render = {() => <Profile currentUser = {currentUser} />} /> \n                <span>\n\n\n                </span>\n\n\n\n                </>\n            ) : (\n                <Register setIsLoggedIn = {setIsLoggedIn} />\n\n            )}\n\n        </div>\n\n        </>\n\n    )\n}\n\nReactDOM.render(\n    <Router>\n        <Main />\n    </Router>,\n    document.getElementById('app')\n)"],"sourceRoot":""}